#!/bin/bash
# Script de gestion WakDrop

show_help() {
    echo "üéØ WakDrop - Gestionnaire de Service"
    echo
    echo "Usage: ./wakdrop.sh [COMMAND]"
    echo
    echo "Commands:"
    echo "  install     Installer le service systemd"
    echo "  start       D√©marrer le service"
    echo "  stop        Arr√™ter le service" 
    echo "  restart     Red√©marrer le service"
    echo "  status      Afficher le statut"
    echo "  logs        Afficher les logs en temps r√©el"
    echo "  dev         Lancer en mode d√©veloppement (terminal)"
    echo "  test        Tester l'API"
    echo "  help        Afficher cette aide"
}

case "$1" in
    install)
        echo "üîß Installation du service systemd WakDrop..."
        
        # V√©rifier qu'on est dans le bon r√©pertoire
        if [ ! -f "wakdrop.service" ]; then
            echo "‚ùå Erreur: fichier wakdrop.service introuvable"
            echo "   Ex√©cutez ce script depuis /opt/muppy/wakdropbackend"
            exit 1
        fi

        # Copier le fichier service
        echo "üìù Copie du fichier service..."
        sudo cp wakdrop.service /etc/systemd/system/

        # Recharger systemd
        echo "üîÑ Rechargement de systemd..."
        sudo systemctl daemon-reload

        # Activer le service (d√©marrage automatique)
        echo "‚úÖ Activation du service..."
        sudo systemctl enable wakdrop.service

        echo
        echo "üéâ Service WakDrop install√© avec succ√®s !"
        echo
        echo "Commandes utiles:"
        echo "  ./wakdrop.sh start        # D√©marrer"
        echo "  ./wakdrop.sh stop         # Arr√™ter"  
        echo "  ./wakdrop.sh restart      # Red√©marrer"
        echo "  ./wakdrop.sh status       # Statut"
        echo "  ./wakdrop.sh logs         # Logs en temps r√©el"
        echo
        echo "Le service d√©marrera automatiquement au boot du syst√®me."
        echo

        # Proposer de d√©marrer maintenant
        read -p "Voulez-vous d√©marrer le service maintenant ? [y/N] " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            echo "üöÄ D√©marrage du service..."
            sudo systemctl start wakdrop
            sleep 2
            sudo systemctl status wakdrop --no-pager
            echo
            echo "‚úÖ Service d√©marr√© !"
            echo "üåê API disponible sur: http://localhost:8000"
            echo "üìö Documentation: http://localhost:8000/docs"
        fi
        ;;
    start)
        echo "üöÄ D√©marrage de WakDrop..."
        sudo systemctl start wakdrop
        echo "‚úÖ Service d√©marr√©"
        ;;
    stop)
        echo "‚èπÔ∏è Arr√™t de WakDrop..."
        sudo systemctl stop wakdrop
        echo "‚úÖ Service arr√™t√©"
        ;;
    restart)
        echo "üîÑ Red√©marrage de WakDrop..."
        sudo systemctl restart wakdrop
        echo "‚úÖ Service red√©marr√©"
        ;;
    status)
        echo "üìä Statut de WakDrop:"
        sudo systemctl status wakdrop --no-pager
        ;;
    logs)
        echo "üìú Logs WakDrop (Ctrl+C pour quitter):"
        sudo journalctl -u wakdrop -f
        ;;
    dev)
        echo "üîß Mode d√©veloppement - Lancement manuel..."
        source venv/bin/activate
        uvicorn main:app --host 0.0.0.0 --port 8000 --reload
        ;;
    test)
        echo "üß™ Test de l'API..."
        if curl -s http://localhost:8000/health > /dev/null; then
            echo "‚úÖ API fonctionne - http://localhost:8000"
            echo "üìö Documentation: http://localhost:8000/docs"
        else
            echo "‚ùå API non accessible"
            echo "   V√©rifiez que le service est d√©marr√© avec: ./wakdrop.sh status"
        fi
        ;;
    help|--help|-h|"")
        show_help
        ;;
    *)
        echo "‚ùå Commande inconnue: $1"
        echo
        show_help
        exit 1
        ;;
esac